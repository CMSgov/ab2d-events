name: Build and Test

on:
  push:
    branches:
      - 'test/*'
  pull_request:
    branches:
      - 'test/*'

env:
  ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK and Gradle
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          gradle: '7.2'

      - name: Generate Gradle Wrapper
        run: gradle wrapper --gradle-version 7.2

      - name: Install dependencies
        run: |
          ./gradlew dependencies      
      
      - name: Build files
        run: |
          ./gradlew build -x test
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      
      - name: Do tests
        run: |
          ./gradlew clean test --info build
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      
      - name: Build Jar
        run: |
          ./gradlew jar --info build
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      
      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: '.'
          projectName: 'ab2d-events'
          projectKey: 'ab2d-events'
          serverUrl: 'https://sonarqube.cloud.cms.gov'
      
      - name: Quality Gate Check
        run: |
          status=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=<your_project_key>" | jq -r .projectStatus.status)
          echo $status
          if [ "$status" != "OK" ]; then
            echo "Quality Gate failed"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: SBOM
        run: |
          ./gradlew cyclonedxBom
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
